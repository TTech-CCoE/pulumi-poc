name: AWS-S3-CloudFront-YAML
runtime: yaml
description: Static website with private S3 + CloudFront (OAC)

resources:
  # S3 Bucket privado
  my-bucket:
    type: aws:s3:BucketV2
    properties:
      bucket: "ttech-pulumi-yaml"

  # Public Access Block - impede acesso direto ao S3
  public-access-block:
    type: aws:s3:BucketPublicAccessBlock
    properties:
      bucket: ${my-bucket.id}
      blockPublicAcls: true
      blockPublicPolicy: true
      ignorePublicAcls: true
      restrictPublicBuckets: true

  # Upload do index.html
  index.html:
    type: aws:s3:BucketObject
    properties:
      bucket: ${my-bucket.id}
      source:
        fn::fileAsset: ./index.html
      contentType: text/html
    options:
      dependsOn:
        - ${public-access-block}

  # Upload da imagem
  imagem.png:
    type: aws:s3:BucketObject
    properties:
      bucket: ${my-bucket.id}
      source:
        fn::fileAsset: ./Platform_engineering.png
      contentType: image/png
    options:
      dependsOn:
        - ${public-access-block}

  # Origin Access Control (OAC)
  cloudfront-oac:
    type: aws:cloudfront:OriginAccessControl
    properties:
      name: my-oac
      description: OAC for S3 access
      originAccessControlOriginType: s3
      signingBehavior: always
      signingProtocol: sigv4

  # CloudFront Distribution com OAC
  cdn:
    type: aws:cloudfront:Distribution
    properties:
      enabled: true
      isIpv6Enabled: true
      defaultRootObject: index.html

      origins:
        - originId: s3-origin
          domainName: ${my-bucket.bucketRegionalDomainName}
          originAccessControlId: ${cloudfront-oac.id}
          s3OriginConfig:
            originAccessIdentity: ""

      defaultCacheBehavior:
        targetOriginId: s3-origin
        viewerProtocolPolicy: redirect-to-https
        allowedMethods:
          - GET
          - HEAD
        cachedMethods:
          - GET
          - HEAD
        compress: true
        forwardedValues:
          queryString: false
          cookies:
            forward: none

      restrictions:
        geoRestriction:
          restrictionType: none

      viewerCertificate:
        cloudfrontDefaultCertificate: true

  # Permiss√£o para CloudFront acessar o bucket
  bucket-policy:
    type: aws:s3:BucketPolicy
    properties:
      bucket: ${my-bucket.id}
      policy:
        fn::toJSON:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: cloudfront.amazonaws.com
              Action: "s3:GetObject"
              Resource: "arn:aws:s3:::${my-bucket.id}/*"

outputs:
  cloudfront_url: https://${cdn.domainName}/index.html
